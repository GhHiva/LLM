a = torch.rand(4, 5)
print(f" a: {a}\n sum(a): {sum(a)}\n a.sum():{a.sum()}\n a.sum(0): {a.sum(0)}\n a.sum(1):{a.sum(1)}\n a[0]: {a[0], sum(a[0])}\n a[1]: {a[1], sum(a[1])}\n a[2]: {a[2], sum(a[2])}\n a[3]: {a[3], sum(a[3])}")
_______________________________________________________________________________________________

a: tensor([[0.8317, 0.1053, 0.2695, 0.3588, 0.1994],
        [0.5472, 0.0062, 0.9516, 0.0753, 0.8860],
        [0.5832, 0.3376, 0.8090, 0.5779, 0.9040],
        [0.5547, 0.3423, 0.6343, 0.3644, 0.7104]])

 sum(a): tensor([2.5167, 0.7914, 2.6644, 1.3764, 2.6998])

 a.sum(): 10.048750877380371

 a.sum(0): tensor([2.5167, 0.7914, 2.6644, 1.3764, 2.6998])

 a.sum(1): tensor([1.7647, 2.4662, 3.2117, 2.6062])

 a[0]: (tensor([0.8317, 0.1053, 0.2695, 0.3588, 0.1994]), tensor(1.7647))

 a[1]: (tensor([0.5472, 0.0062, 0.9516, 0.0753, 0.8860]), tensor(2.4662))

 a[2]: (tensor([0.5832, 0.3376, 0.8090, 0.5779, 0.9040]), tensor(3.2117))

 a[3]: (tensor([0.5547, 0.3423, 0.6343, 0.3644, 0.7104]), tensor(2.6062))

---------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------

probs = torch.tensor([0.2, 0.3, 0.5])
m = Multinomial(total_count=10, probs=probs)
sample = m.sample()
logp = m.log_prob(sample)
print(f" m is : {m}\n sample: {sample}\n logp: {logp}")
a = torch.rand(4, 5)
print(f" a: {a}\n sum(a): {sum(a)}\n a.sum():{a.sum()}\n a.sum(0): {a.sum(0)}\n a.sum(1):{a.sum(1)}\n a[0]: {a[0], sum(a[0])}\n a[1]: {a[1], sum(a[1])}\n a[2]: {a[2], sum(a[2])}\n a[3]: {a[3], sum(a[3])}")
b = torch.arange(20).view(1, 4, 5)
w1 = torch.arange(20).view(4, 5)
w = torch.sum(w1, (0,))
v = torch.sum(w1, (1,))
print(f" {w1}\n {w}\n {v} ")

___________________________________________________________________________________

m is : Multinomial()
 sample: tensor([2., 2., 6.])
 logp: -2.6468372344970703
 a: tensor([[0.8317, 0.1053, 0.2695, 0.3588, 0.1994],
        [0.5472, 0.0062, 0.9516, 0.0753, 0.8860],
        [0.5832, 0.3376, 0.8090, 0.5779, 0.9040],
        [0.5547, 0.3423, 0.6343, 0.3644, 0.7104]])
 sum(a): tensor([2.5167, 0.7914, 2.6644, 1.3764, 2.6998])
 a.sum():10.048750877380371
 a.sum(0): tensor([2.5167, 0.7914, 2.6644, 1.3764, 2.6998])
 a.sum(1):tensor([1.7647, 2.4662, 3.2117, 2.6062])
 a[0]: (tensor([0.8317, 0.1053, 0.2695, 0.3588, 0.1994]), tensor(1.7647))
 a[1]: (tensor([0.5472, 0.0062, 0.9516, 0.0753, 0.8860]), tensor(2.4662))
 a[2]: (tensor([0.5832, 0.3376, 0.8090, 0.5779, 0.9040]), tensor(3.2117))
 a[3]: (tensor([0.5547, 0.3423, 0.6343, 0.3644, 0.7104]), tensor(2.6062))
 tensor([[ 0,  1,  2,  3,  4],
        [ 5,  6,  7,  8,  9],
        [10, 11, 12, 13, 14],
        [15, 16, 17, 18, 19]])
 tensor([30, 34, 38, 42, 46])
 tensor([10, 35, 60, 85]) 

-----------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------

p= N[0]/N[0].sum() #the first column(): '.a','.b',...
g= torch.Generator().manual_seed(42)
n_ch = torch.multinomial(p, num_samples=27, replacement=True, generator=g)
print(f" p is : {p}\n n_ch is : {n_ch}\n n_ch.tolist() is :{n_ch.tolist()}")


strofn_ch=[]
for i in n_ch.tolist():
    j= itos[i]
    strofn_ch.append(j)
print(strofn_ch)



from collections import Counter

# Convert to Python list and count
counts = Counter(n_ch.tolist())
print(counts)
# Print counts
for value, count in counts.items():
    print(f"Value {value} appears {count} times")

______________________

p is : tensor([0.0000, 0.1377, 0.0408, 0.0481, 0.0528, 0.0478, 0.0130, 0.0209, 0.0273,
        0.0184, 0.0756, 0.0925, 0.0491, 0.0792, 0.0358, 0.0123, 0.0161, 0.0029,
        0.0512, 0.0642, 0.0408, 0.0024, 0.0117, 0.0096, 0.0042, 0.0167, 0.0290])
 n_ch is : tensor([ 1,  1,  1,  1, 11, 10, 25, 21,  1,  1,  2,  8, 19, 19,  8, 12,  1, 13, 12, 10,  1, 13,  5,  5,  1,  1, 22])
 n_ch.tolist() is :[1, 1, 1, 1, 11, 10, 25, 21, 1, 1, 2, 8, 19, 19, 8, 12, 1, 13, 12, 10, 1, 13, 5, 5, 1, 1, 22]

Counter({1: 10, 10: 2, 8: 2, 19: 2, 12: 2, 13: 2, 5: 2, 11: 1, 25: 1, 21: 1, 2: 1, 22: 1})


['a', 'a', 'a', 'a', 'k', 'j', 'y', 'u', 'a', 'a', 'b', 'h', 's', 's', 'h', 'l', 'a', 'm', 'l', 'j', 'a', 'm', 'e', 'e', 'a', 'a', 'v']


Value 1 appears 10 times
Value 11 appears 1 times
Value 10 appears 2 times
Value 25 appears 1 times
Value 21 appears 1 times
Value 2 appears 1 times
Value 8 appears 2 times
Value 19 appears 2 times
Value 12 appears 2 times
Value 13 appears 2 times
Value 5 appears 2 times
Value 22 appears 1 times

---------------------------------------------
---------------------------------------------

